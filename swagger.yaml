swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: 1.0.0
  termsOfService: http://swagger.io/terms/
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  # TRANSACTIONS===================================================================
  /user/transactions:
    get:
      tags:
        - User Transaction
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      summary: Get Transactions List
      responses:
        "200":
          description: Successful request
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/transactions/{transactionId}:
    put:
      tags:
        - User Transaction
      summary: Update Fields In Transaction
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Fields to be updated for the transaction
          required: true
          schema:
            $ref: "#/definitions/UpdateTransactionFields"
      responses:
        "200":
          description: Successful request
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
# ==========================
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  # DEFINITION FOR THE TRANSACTIONS==========================================
  Transaction:
    type: object
    properties:
      id:
        type: string
      accounts:
        type: array
        items:
          $ref: "#/definitions/Account"
    required:
      - id
      - accounts
  Account:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      amount:
        type: string
      description:
        type: string
      transactions:
        type: array
        items:
          $ref: "#/definitions/TransactionItem"
    required:
      - id
      - title
      - amount
      - description
      - transactions
  TransactionItem:
    type: object
    properties:
      date:
        type: string
        format: date-time
      description:
        type: string
      amount:
        type: string
      balance:
        type: string
      type:
        type: string
      category:
        type: string
      note:
        type: string
    required:
      - date
      - description
      - amount
      - balance
      - type
      - category
      - note
  UpdateTransactionFields:
    type: object
    properties:
      category:
        type: string
        description: New category of the transaction
      note:
        type: string
        description: New note of the transaction
    required:
      - category
      - note
# =========================
